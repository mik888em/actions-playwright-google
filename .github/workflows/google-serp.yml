name: Playwright Google SERP

on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'Режим: google или demo'
        required: true
        default: 'demo'
      query:
        description: 'Запрос для Google (используется при mode=google)'
        required: false
        default: 'site:example.com'
      url:
        description: 'URL для демо-скрапинга (используется при mode=demo)'
        required: false
        default: 'https://cryptopanic.com'

jobs:
  serp:
    runs-on: ubuntu-latest
    # Увеличили общий таймаут джоба, чтобы исключить автокэнсел.
    timeout-minutes: 60

    steps:
      - name: Checkout (force main)
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          # Небольшое ускорение повторных запусков
          cache: 'pip'
          cache-dependency-path: 'requirements-playwright.txt'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-playwright.txt
          python -m playwright install --with-deps chromium
        # Явный таймаут шага установки, чтобы не висел бесконечно.
        timeout-minutes: 20

      - name: Show repo tree (debug)
        run: |
          echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"
          pwd
          ls -la
          echo "----- find (maxdepth 3) -----"
          find . -maxdepth 3 -type f -print | sort
          echo "----- check files exist -----"
          test -f ./scripts/google_serp_playwright.py && echo "OK: google_serp_playwright.py"
          test -f ./scripts/demo_playwright.py && echo "OK: demo_playwright.py" || echo "demo_playwright.py (опционально, для mode=demo)"

      - name: Run scraper
        env:
          QUERY: ${{ inputs.query }}
          MODE:  ${{ inputs.mode }}
          URL:   ${{ inputs.url }}
        # Большой таймаут именно для шага с парсингом.
        timeout-minutes: 50
        run: |
          set -e
          echo "MODE=$MODE"
          if [ "$MODE" = "demo" ]; then
            python ./scripts/demo_playwright.py
          else
            python ./scripts/google_serp_playwright.py
          fi

      - name: Upload artifacts (JSON + screenshot)
        # Выгружаем артефакты и при успехе, и при ошибке шага Run scraper.
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: google-serp-output
          path: out/
          if-no-files-found: warn
          retention-days: 7
